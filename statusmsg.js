// Generated by CoffeeScript 1.4.0
(function() {
  var set_css, statusmsg;

  statusmsg = window.statusmsg = {};

  set_css = function(msgbox) {
    return msgbox.css("position", "fixed").css("left", ($(window).width() - $(msgbox).outerWidth()) / 2);
  };

  statusmsg.setup = function(append_to, opacity, id) {
    var msgbox;
    if (append_to == null) {
      append_to = "body";
    }
    if (opacity == null) {
      opacity = 0.8;
    }
    if (id == null) {
      id = "statusmsg";
    }
    statusmsg._id = id;
    statusmsg._opacity = opacity;
    msgbox = $(document.createElement("div"));
    msgbox.addClass("statusmsg").attr("id", statusmsg._id);
    statusmsg._msgbox = msgbox;
    $(append_to).append(msgbox);
    $(window).resize(function() {
      return set_css(statusmsg._msgbox);
    });
    $(window).resize();
    return statusmsg.setup = function() {
      throw "Error: setup has already been called!";
    };
  };

  statusmsg.clear_auto_close = function() {
    if (statusmsg._timeoutid) {
      clearTimeout(statusmsg._timeoutid);
      return statusmsg._timeoutid = void 0;
    }
  };

  statusmsg.display = statusmsg.open = function(msg, closable, type, autoclose, callback) {
    if (type == null) {
      type = "";
    }
    if (autoclose == null) {
      autoclose = 0;
    }
    if (callback == null) {
      callback = function() {
        return null;
      };
    }
    type = " " + type;
    statusmsg.clear_auto_close();
    if (closable) {
      msg += "<a href=\"#\" class=\"closebtn\">&times;</a>";
    }
    statusmsg._msgbox.html(msg);
    statusmsg._msgbox.removeClass().addClass("statusmsg" + type);
    set_css(statusmsg._msgbox);
    if (closable) {
      $(".closebtn", statusmsg._msgbox).click(function(e) {
        e.preventDefault();
        return statusmsg.close();
      });
    }
    if (statusmsg._msgbox.css("display") === "none" || parseFloat(statusmsg._msgbox.css("opacity")) < 1) {
      statusmsg._msgbox.fadeIn(400, callback);
    }
    if (autoclose > 0) {
      return statusmsg._timeoutid = setTimeout((function() {
        return statusmsg.close();
      }), autoclose);
    }
  };

  statusmsg.hide = statusmsg.close = function(callback) {
    if (callback == null) {
      callback = function() {
        return null;
      };
    }
    if (statusmsg._msgbox.css("display") !== "none") {
      statusmsg._msgbox.fadeOut(400, callback);
    }
    return statusmsg.clear_auto_close();
  };

}).call(this);
